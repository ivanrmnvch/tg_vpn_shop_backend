services:
  postgresql:
    image: postgres:latest
    restart: always
    volumes:
      # windows
      # - C:/vpn/volumes:/var/lib/postgresql/data
      # linux
      - /home/roanokay/Programm/data/postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      .env
    expose:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      # - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093

      # local dev
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092


      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - 'kafka_data:/bitnami/kafka'
    ports:
      - '9092:9092'
      - '9093:9093'
    expose:
      - "9092"
    healthcheck:
      test: kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - '8083:8080'

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: backend:latest
    depends_on:
      kafka:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    ports:
      - "127.0.0.1:8082:8082"
    env_file:
      - .env
    command: npm run dev
    expose:
      - "8082"
    develop:
      watch:
        - path: package.json
          action: rebuild
        - path: src
          target: /src
          action: sync

volumes:
  kafka_data:
    driver: local
